import requests
import time
from datetime import datetime, timezone

# Pionex API credentials
api_key = ''
secret_key = ''

# Pionex API endpoints
base_url = 'https://api.pionex.com'
order_url = f'{base_url}/api/v1/order'
ticker_url = f'{base_url}/api/v1/market/ticker'

# Function to get the current price of BTC/USDT
def get_btc_price():
    response = requests.get(f'{ticker_url}?symbol=BTCUSDT')
    data = response.json()
    return float(data['price'])

# Function to place a market buy order
def place_buy_order(symbol, amount):
    order_data = {
        'symbol': symbol,
        'side': 'BUY',
        'type': 'MARKET',
        'quantity': amount,
        'timestamp': int(time.time() * 1000)
    }
    headers = {
        'X-MBX-APIKEY': api_key
    }
    response = requests.post(order_url, headers=headers, json=order_data)
    print(f"Buy order placed: {response.json()}")

# Function to check if the daily candle has closed
def has_daily_candle_closed():
    now = datetime.now(timezone.utc)
    return now.hour == 0 and now.minute == 0

# Main loop
symbol = 'BTCUSDT'
amount = 0.001  # Amount of BTC to buy

while True:
    if has_daily_candle_closed():
        btc_price = get_btc_price()
        place_buy_order(symbol, amount)
        time.sleep(60)  # Sleep for 1 minute to avoid multiple orders in the same minute
    else:
        print("Daily candle not closed")
    time.sleep(1)  # Check every second